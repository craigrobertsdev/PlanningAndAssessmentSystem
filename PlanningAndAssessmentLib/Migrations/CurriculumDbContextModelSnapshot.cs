// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlanningAndAssessmentLib.Data;

#nullable disable

namespace PlanningAndAssessmentLib.Migrations
{
    [DbContext(typeof(CurriculumContext))]
    partial class CurriculumDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PlanningAndAssessmentLib.Data.Curriculum.ContentDescription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CurriculumCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("SubstrandId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubstrandId");

                    b.ToTable("ContentDescription");
                });

            modelBuilder.Entity("PlanningAndAssessmentLib.Data.Curriculum.Elaboration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ContentDescriptionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContentDescriptionId");

                    b.ToTable("Elaboration");
                });

            modelBuilder.Entity("PlanningAndAssessmentLib.Data.Curriculum.Strand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("YearLevelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("YearLevelId");

                    b.ToTable("Strand");
                });

            modelBuilder.Entity("PlanningAndAssessmentLib.Data.Curriculum.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("PlanningAndAssessmentLib.Data.Curriculum.Substrand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("StrandId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrandId");

                    b.ToTable("Substrand");
                });

            modelBuilder.Entity("PlanningAndAssessmentLib.Data.Curriculum.YearLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AchievementStandard")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<string>("SubjectYearLevel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("YearLevel");
                });

            modelBuilder.Entity("PlanningAndAssessmentLib.Data.Curriculum.ContentDescription", b =>
                {
                    b.HasOne("PlanningAndAssessmentLib.Data.Curriculum.Substrand", "Substrand")
                        .WithMany("ContentDescriptions")
                        .HasForeignKey("SubstrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Substrand");
                });

            modelBuilder.Entity("PlanningAndAssessmentLib.Data.Curriculum.Elaboration", b =>
                {
                    b.HasOne("PlanningAndAssessmentLib.Data.Curriculum.ContentDescription", "ContentDescription")
                        .WithMany("Elaborations")
                        .HasForeignKey("ContentDescriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContentDescription");
                });

            modelBuilder.Entity("PlanningAndAssessmentLib.Data.Curriculum.Strand", b =>
                {
                    b.HasOne("PlanningAndAssessmentLib.Data.Curriculum.YearLevel", "YearLevel")
                        .WithMany("Strands")
                        .HasForeignKey("YearLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("YearLevel");
                });

            modelBuilder.Entity("PlanningAndAssessmentLib.Data.Curriculum.Substrand", b =>
                {
                    b.HasOne("PlanningAndAssessmentLib.Data.Curriculum.Strand", "Strand")
                        .WithMany("Substrands")
                        .HasForeignKey("StrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Strand");
                });

            modelBuilder.Entity("PlanningAndAssessmentLib.Data.Curriculum.YearLevel", b =>
                {
                    b.HasOne("PlanningAndAssessmentLib.Data.Curriculum.Subject", "Subject")
                        .WithMany("YearLevels")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("PlanningAndAssessmentLib.Data.Curriculum.ContentDescription", b =>
                {
                    b.Navigation("Elaborations");
                });

            modelBuilder.Entity("PlanningAndAssessmentLib.Data.Curriculum.Strand", b =>
                {
                    b.Navigation("Substrands");
                });

            modelBuilder.Entity("PlanningAndAssessmentLib.Data.Curriculum.Subject", b =>
                {
                    b.Navigation("YearLevels");
                });

            modelBuilder.Entity("PlanningAndAssessmentLib.Data.Curriculum.Substrand", b =>
                {
                    b.Navigation("ContentDescriptions");
                });

            modelBuilder.Entity("PlanningAndAssessmentLib.Data.Curriculum.YearLevel", b =>
                {
                    b.Navigation("Strands");
                });
#pragma warning restore 612, 618
        }
    }
}
